from pyspark.sql import SparkSession
from pyspark.sql.types import StructType, StructField, StringType, IntegerType, FloatType 
import random 

#Lista com 300 cidades 
cities = [
    "New York", "Los Angeles", "Chicago", "Houston", "Phoenix", "Philadelphia", "San Antonio", "San Diego", "Dallas", "San Jose", "Austin", "Jacksonville", "Fort Worth", "Columbus", "Charlotte", "San Francisco", "Indianapolis", "Seattle", "Denver", "Washington", "Boston", "El Paso", "Nashville", "Detroit", "Oklahoma City", "Portland", "Las Vegas", "Memphis", "Louisville", "Baltimore", "Milwaukee", "Albuquerque", "Tucson", "Fresno", "Sacramento", "Kansas City", "Long Beach", "Mesa", "Atlanta", "Colorado Springs", "Virginia Beach", "Raleigh", "Omaha", "Miami", "Oakland", "Minneapolis", "Tulsa", "Wichita", "New Orleans", "Arlington", "Cleveland", "Bakersfield", "Tampa", "Aurora", "Honolulu", "Anaheim", "Santa Ana", "Corpus Christi", "Riverside", "Lexington","St. Louis", "Stockton", "Pittsburgh", "Saint Paul", "Cincinnati", "Anchorage", "Henderson", "Greensboro", "Plano", "Newark","Lincoln", "Toledo", "Orlando", "Chula Vista", "Irvine", "Fort Wayne", "Jersey City", "Durham", "St. Petersburg", "Laredo", "Buffalo", "Madison", "Lubbock", "Chandler", "Scottsdale", "Glendale", "Reno", "Norfolk", "Winston-Salem", "North Las Vegas", "Irving", "Chesapeake", "Gilbert", "Hialeah", "Garland", "Fremont", "Richmond", "Boise", "Baton Rouge", "Des Moines","Spokane", "San Bernardino", "Modesto", "Fontana", "Santa Clarita", "Birmingham", "Oxnard", "Fayetteville", "Moreno Valley", "Rochester","Glendale", "Huntington Beach", "Salt Lake City", "Grand Rapids", "Amarillo", "Yonkers", "Aurora", "Montgomery", "Akron", "Little Rock", "Huntsville", "Augusta", "Port St. Lucie", "Grand Prairie", "Columbus", "Tallahassee", "Overland Park", "Tempe", "McKinney", "Mobile", "Cape Coral", "Shreveport", "Frisco", "Knoxville", "Worcester", "Brownsville", "Vancouver", "Fort Lauderdale", "Sioux Falls", "Ontario", "Chattanooga", "Providence", "Newport News", "Rancho Cucamonga", "Santa Rosa", "Peoria", "Oceanside", "Elk Grove", "Salem", "Pembroke Pines",
    "Eugene", "Garden Grove", "Cary", "Fort Collins", "Corona", "Springfield", "Jackson", "Alexandria", "Hayward", "Clarksville", "Lakewood", "Lancaster", "Salinas", "Palmdale", "Hollywood", "Springfield", "Macon", "Kansas City", "Sunnyvale", "Pomona","Killeen", "Escondido", "Pasadena", "Naperville", "Bellevue", "Joliet", "Murfreesboro", "Midland", "Rockford", "Paterson", "Savannah", "Bridgeport", "Torrance", "McAllen", "Syracuse", "Surprise", "Denton", "Roseville", "Thornton", "Miramar","Pasadena", "Mesquite", "Olathe", "Dayton", "Carrollton", "Waco", "Orange", "Fullerton", "Charleston", "West Valley City","Visalia", "Hampton", "Gainesville", "Warren", "Coral Springs", "Cedar Rapids", "Round Rock", "Sterling Heights", "Kent", "Columbia", "Santa Clara", "New Haven", "Stamford", "Concord", "Elizabeth", "Athens", "Thousand Oaks", "Lafayette", "Simi Valley", "Topeka", "Norman", "Fargo", "Wilmington", "Abilene", "Odessa", "Columbia", "Pearland", "Victorville", "Hartford", "Vallejo", "Allentown", "Berkeley", "Richardson", "Arvada", "Ann Arbor", "Rochester", "Cambridge", "Sugar Land", "Lansing", "Evansville", "College Station", "Fairfield", "Clearwater", "Beaumont", "Independence", "Provo", "West Jordan", "Murfreesboro", "Palm Bay", "El Monte","Carlsbad", "North Charleston", "Temecula", "Clovis", "Springfield", "Meridian", "Westminster", "Costa Mesa", "High Point", "Manchester","Pueblo", "Lakeland", "Pompano Beach", "West Palm Beach", "Antioch", "Everett", "Downey", "Lowell", "Centennial", "Elgin","Richmond", "Peoria", "Broken Arrow", "Miami Gardens", "Billings", "Jurupa Valley", "Sandy Springs", "Gresham", "Lewisville", "Hillsboro","Ventura", "Greeley", "Inglewood", "Waterbury", "League City", "Santa Maria", "Tyler", "Davie", "Lakewood", "Daly City", "Boulder", "Allen", "West Covina", "Sparks", "Wichita Falls", "Green Bay", "San Mateo", "Norwalk", "Rialto", "Las Cruces","Chico", "El Cajon", "Burbank", "South Bend", "Renton", "Vista", "Davenport", "Edinburg", "Tuscaloosa", "Carmel","Spokane Valley", "San Angelo", "Vacaville", "Clinton", "Bend", "Woodbridge", "San Marcos", "Hesperia", "Redding", "Chino","Newton", "Nampa", "Edmond", "Citrus Heights", "Parma", "Livonia", "Tracy", "Alhambra", "Kirkland", "Trenton"
]

#Define o esquma da tabela 
schema = StructType([
    StructField("city", StringType(), False), 
    StructField("value", FloatType(), False)
])

#Gera os dados 
num_rows = 10_000_000

#Define a função para valor valores aleatórios
def generate_random_value():
    return random.uniform(-99.0, 99.0)

#Cria um RDD com os dados
data = spark.sparkContext.parallelize(range(num_rows)) \
    .map(lambda x: (cities[x % len(cities)], generate_random_value() ))

#Cria o DataFrame
df = spark.createDataFrame(data, schema)

#Mostra uma amostra
df.show()



from pyspark.sql import SparkSession
from pyspark.sql.types import StructType, StructField, StringType, IntegerType, FloatType 
from pyspark.sql.functions import col, min, max, avg 

agg_schema = StructType([
    StructField("city", StringType(), False), 
    StructField("min", FloatType(), False),
    StructField("max", FloatType(), False),
    StructField("avg", FloatType(), False)
])

#Calcula os agregados
agg_df = df.groupBy("city") \
    .agg(min(col("value")).alias("min"), 
         max(col("value")).alias("max"), 
         avg(col("value")).alias("avg")) 
    
#Mostra os dados
agg_df.show()